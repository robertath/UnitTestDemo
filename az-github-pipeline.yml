#[setup-pipeline] update stage dev, qa
trigger:
- main

variables:
  solutionDir: './'
  azureServiceConnection: 'sconn-calculator'
  subscriptionId: 'ae0d5ee9-54ad-466f-9db6-4301e35952b4'
  resourceGroup: 'rg-UnitTestDemo'
  location: 'northeurope'

pool:
  vmImage: ubuntu-latest

stages:
- stage: build
  jobs:
    - job: build
      displayName: 'Build web application'
      steps:
      - script: pwd
        displayName: 'what directory are we in?'

      - script: ls -la
        displayName: 'what files are in this folder?'

      - script: docker --version
        displayName: 'docker version'
        workingDirectory: '$(solutionDir)'
    
      - task: UseDotNet@2
        displayName: 'Install .NET Core 2.1 SDK'
        inputs:
          version: '2.1.x'
          packageType: sdk
    
      - script: dotnet build
        displayName: 'dotnet build'
        workingDirectory: '$(solutionDir)'

      - task: DotNetCoreCLI@2
        displayName: run unit tests
        inputs:
          command: 'test'
          workingDirectory: '$(solutiondir)/test/UnitTestDemo.Tests'
      
      - task: DotNetCoreCLI@2
        displayName: publish web application for azure
        inputs:
          command: publish
          arguments: '-o $(build.artifactStagingDirectory)/for-azure'
          workingDirectory: '$(solutiondir)/src/UnitTestDemo.WebUi'
          zipAfterPublish: true
          publishWebProjects: true
      
      - script: chmod +x ./create-deploy-scripts-folder.sh
        displayName: 'added .sh folders permission'
        workingDirectory: '$(solutionDir)'

      - script: ./create-deploy-scripts-folder.sh
        displayName: 'create deploy scripts folder'
        workingDirectory: '$(solutionDir)'

      - script: cp -r ./deploy-scripts $(build.artifactStagingDirectory)/deploy-scripts
        displayName: copy deploy scripts to artifacts

      - task: PublishPipelineArtifact@1
        inputs:
          # targetPath: '$(Pipeline.Workspace)'
          targetPath: '$(build.artifactStagingDirectory)'
          artifact: 'drop'
          publishLocation: 'pipeline'
